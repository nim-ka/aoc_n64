#ifndef _MARIO_HEAD_4_H_
#define _MARIO_HEAD_4_H_

#include "types.h"
#include "goddard/gd_types.h"

// extern ? D_801A8254;
// extern ? D_801A8250;
// extern ? D_801A8270;
// extern ? D_801B5E50;
// extern ? D_801B5E58;
// extern ? D_801B5E7C;
// extern ? D_801B5E9C;
// extern ? D_801B5EA4;
// extern ? D_801B5EAC;
// extern ? D_801B5EB0;
// extern ? D_801B5EB4;
// extern ? D_801B5EFC;
// extern ? D_801B5F04;
// extern ? D_801B5F30;
// extern ? D_801B5F38;
// extern ? D_801B5F3C;
// extern ? D_801B5F40;
// extern ? D_801B5F78;
// extern ? D_801B5F98;
// extern ? D_801B5FC0;
// extern ? D_801B5FC4;
// extern ? D_801B5FEC;
// extern ? D_801B600C;
// extern ? D_801B6030;
// extern ? D_801B6050;
// extern ? D_801B6084;
// extern ? D_801B6090;
// extern ? D_801B60B4;
// extern ? D_801B60E8;
// extern ? D_801B60F4;
// extern ? D_801B6128;
// extern ? D_801B6134;
// extern ? D_801B6158;
// extern ? D_801B617C;
// extern ? D_801B6188;
// extern ? D_801B6198;
// extern ? D_801B61AC;
// extern ? D_801B61CC;
// extern ? D_801B61F0;
// extern ? D_801B6210;
// extern ? D_801B621C;
// extern ? D_801B622C;
// extern ? D_801B623C;
// extern ? D_801B6254;
// extern ? D_801B626C;
// extern ? D_801B628C;
// extern ? D_801B62C0;
// extern ? D_801B62D0;
// extern ? D_801B62F4;
// extern ? D_801B631C;
// extern ? D_801B6350;
// extern ? D_801B6360;
// extern ? D_801B6384;
// extern ? D_801B63A8;
// extern ? D_801B63DC;
// extern ? D_801B63EC;
// extern ? D_801B6410;
// extern ? D_801B6444;
// extern ? D_801B6454;
// extern ? D_801B6478;
// extern ? D_801B64AC;
// extern ? D_801B64BC;
// extern ? D_801B64E0;
// extern ? D_801B6508;
// extern ? D_801B653C;
// extern ? D_801B654C;
// extern ? D_801B6570;
// extern ? D_801B6598;
// extern ? D_801B65BC;
// extern ? D_801B65E0;
// extern ? D_801B6604;
// extern ? D_801B662C;
// extern ? D_801B6660;
// extern ? D_801B6674;
// extern ? D_801B6698;
// extern ? D_801B66CC;
// extern ? D_801B66E0;
// extern ? D_801B6708;
// extern ? D_801B673C;
// extern ? D_801B674C;
// extern ? D_801B676C;
// extern ? D_801B6790;
// extern ? D_801B67B4;
// extern ? D_801B67D8;
// extern ? D_801B680C;
// extern ? D_801B681C;
// extern ? D_801B6840;
// extern ? D_801B6874;
// extern ? D_801B6884;
// extern ? D_801B68A8;
// extern ? D_801B68CC;
// extern ? D_801B6900;
// extern ? D_801B6910;
// extern ? D_801B6934;
// extern ? D_801B6968;
// extern ? D_801B6978;
// extern ? D_801B699C;
// extern ? D_801B69D0;
// extern ? D_801B69E0;
// extern ? D_801B6A04;
// extern ? D_801B6A38;
// extern ? D_801B6A48;
// extern ? D_801B6A6C;
// extern ? D_801B6AA0;
// extern ? D_801B6AB0;
// extern ? D_801B6AD4;
// extern ? D_801B6B08;
// extern ? D_801B6B18;
// extern ? D_801B6B3C;
// extern ? D_801B6B70;
// extern ? D_801B6B84;
// extern ? D_801B6BA8;
// extern ? D_801B6BDC;
// extern ? D_801B6BEC;
// extern ? D_801B6C10;
// extern ? D_801B6C44;
// extern ? D_801B6C50;
// extern ? D_801B6C74;
// extern ? D_801B6CA8;
// extern ? D_801B6CB8;
// extern ? D_801B6CDC;
// extern ? D_801B6D10;
// extern ? D_801B6D24;
// extern ? D_801B6D5C;
// extern ? D_801B6D80;
// extern ? D_801B6DB4;
// extern ? D_801B6DC4;
// extern ? D_801B6DE8;
// extern ? D_801B6E1C;
// extern ? D_801B6E2C;
// extern ? D_801B6E50;
// extern ? D_801B6E84;
// extern ? D_801B6E94;
// extern ? D_801B6EB8;
// extern ? D_801B6EEC;
// extern ? D_801B6EFC;
// extern ? D_801B6F20;
// extern ? D_801B6F54;
// extern ? D_801B6F68;
// extern ? D_801B6F8C;
// extern ? D_801B6FC0;
// extern ? D_801B6FD0;
// extern ? D_801B6FF4;
// extern ? D_801B7028;
// extern ? D_801B7034;
// extern ? D_801B7058;
// extern ? D_801B708C;
// extern ? D_801B709C;
// extern ? D_801B70C0;
// extern ? D_801B70F4;
// extern ? D_801B70FC;
// extern ? D_801B7120;
// extern ? D_801B7154;
// extern ? D_801B7164;
// extern ? D_801B7188;
// extern ? D_801B71AC;
// extern ? D_801B71E0;
// extern ? D_801B71F0;
// extern ? D_801B7214;
// extern ? D_801B7248;
// extern ? D_801B7258;
// extern ? D_801B727C;
// extern ? D_801B728C;
// extern ? D_801B729C;
// extern ? D_801B72D0;
// extern ? D_801B72E0;
// extern ? D_801B7304;
// extern ? D_801B7328;
// extern ? D_801B734C;
// extern ? D_801B7380;
// extern ? D_801B738C;
// extern ? D_801B73B0;
// extern ? D_801B73E4;
// extern ? D_801B73F0;
// extern ? D_801B7414;
// extern ? D_801B7448;
// extern ? D_801B7468;
// extern ? D_801B749C;
// extern ? D_801B74BC;
// extern ? D_801B74F0;
// extern ? D_801B7510;
// extern ? D_801B7544;
// extern ? D_801B7550;
// extern ? D_801B7574;
// extern ? D_801B7580;
// extern ? D_801B758C;
// extern ? D_801B75A8;
// extern ? D_801B75B4;
// extern ? D_801B75E8;
// extern ? D_801B75F4;
// extern ? D_801B7618;
// extern ? D_801B763C;
// extern ? D_801B7670;
// extern ? D_801B767C;
// extern ? D_801B76A0;
// extern ? D_801B76D4;
// extern ? D_801B76E0;
// extern ? D_801B7704;
// extern ? D_801B7728;
// extern ? D_801B775C;
// extern ? D_801B776C;
// extern ? D_801B7790;
// extern ? D_801B77C4;
// extern ? D_801B77D4;
// extern ? D_801B77F8;
// extern ? D_801B782C;
// extern ? D_801B7838;
// extern ? D_801B785C;
// extern ? D_801B7890;
// extern ? D_801B78A0;
// extern ? D_801B78C4;
// extern ? D_801B78F8;
// extern ? D_801B7908;
// extern ? D_801B792C;
// extern ? D_801B7960;
// extern ? D_801B7970;
// extern ? D_801B7994;
// extern ? D_801B79C8;
// extern ? D_801B79D8;
// extern ? D_801A8258;
// extern ? D_801B79FC;
// extern ? D_801B7A20;
// extern ? D_801B7A54;
// extern ? D_801B7A64;
// extern ? D_801B7A88;
// extern ? D_801B7ABC;
// extern ? D_801B7ACC;
// extern ? D_801B7AF0;
// extern ? D_801B7B24;
// extern ? D_801B7B34;
// extern ? D_801B7B58;
// extern ? D_801B7B8C;
// extern ? D_801B7BA0;
// extern ? D_801B7BC4;
// extern ? D_801B7BF8;
// extern ? D_801B7C08;
// extern ? D_801B7C2C;
// extern ? D_801B7C60;
// extern ? D_801B7C70;
// extern ? D_801B7C94;
// extern ? D_801B7CC8;
// extern ? D_801B7CDC;
// extern ? D_801B7D00;
// extern ? D_801B7D34;
// extern ? D_801B7FA0;
// extern ? D_801B7FB8;
// extern ? D_8018BCB8;
// extern ? D_801B7FC8;
// extern ? D_801B7FD4;
// extern ? D_801B7FEC;
// extern ? D_8019B9CC;
// extern ? D_801B8038;
// extern ? D_801B80B0;
// extern ? D_801B80C8;
// extern ? D_801B80D8;
// extern ? D_801B80F0;
// extern ? D_801B8100;
// extern ? D_801B8124;
// extern ? D_801B813C;

extern void func_80183910(void);
extern void func_80183940(void);
extern void func_80183970(void);
// extern ? func_801839E0(?);
extern void func_8018421C(char*);
// extern ? Unknown801842C0(?);
// extern ? func_80184368(?);
// extern ? func_8018439C(?);
// extern ? func_801843D0(?);
// extern ? Unknown801844F0(?);
// extern ? func_8018454C(?);
// extern ? func_80184600(?);
// extern ? func_8018466C(?);
// extern ? dMakeNetFromShape(?);
// extern ? func_80184760(?);
// extern ? func_801847A8(?);
// extern ? func_80184A44(?);
extern struct ObjHeader* dMakeobj(s32, s32); // first argument is obj type unique to this function
// extern ? dAttach(?);
// extern ? dAttachTo(?);
// extern ? func_8018522C(?);
// extern ? func_801852D0(?);
// extern ? func_8018531C(?);
// extern ? chk_shapegen(?);
// extern ? dSetNodeGroup(?);
// extern ? func_80186210(?);
// extern ? func_80186300(?);
// extern ? func_8018639C(?);
// extern ? func_80186448(?);
// extern ? func_8018652C(?);
// extern ? func_801865B8(?);
// extern ? func_80186644(?);
// extern ? func_80186764(?);
// extern ? func_80186920(?);
extern struct ObjHeader* dUseObj(char*);
extern void func_80186B44(void *);
// extern ? func_80186B6C(?);
// extern ? dEndGroup(?);
// extern ? func_80186CA0(?);
extern void func_80186D1C(s32); // maybe setting some sort of state global var?
extern void dSetInitPos(f32, f32, f32);
// extern ? dSetVelocity(?);
// extern ? Unknown80187104(?);
// extern ? Unknown8018725C(?);
extern void func_80187340(struct MyVec3f*);
extern void func_801874C8(struct MyVec3f*);
extern void dSetRelPos(f32, f32, f32);
// extern ? Unknown80187970(?);
extern void func_80187B40(struct MyVec3f*);
extern struct ObjGroup* func_80187D38(void);
// extern ? Unknown80187E14(?);
extern void func_80187EF0(struct MyVec3f*);
// extern ? func_80188078(?);
// extern ? UnknownRecursive8018823C(?);
// extern ? Unknown80188390(?);
// extern ? Unknown801884E4(?);
extern void dSetWorldPos(f32, f32, f32);
// extern ? func_80188868(?);
// extern ? Unknown80188970(?);
extern void func_80188A3C(struct MyVec3f *);
// extern ? func_801890B4(?);
extern void dSetScale(f32, f32, f32);
// extern ? func_8018931C(?);
// extern ? func_80189444(?);
// extern ? func_80189520(?);
// extern ? dAddValPtr(?);
// extern ? func_80189798(?);
// extern ? func_80189850(?);
// extern ? func_80189B98(?);
extern void func_80189C68(s32); //proc_dynlist()
// extern ? func_80189E74(?);
// extern ? func_80189FEC(?);
// extern ? dSetParmp(?);
// extern ? func_8018A3F0(?);
// extern ? dSetType(?);
// extern ? func_8018A5C0(?);
// extern ? dSetColNum(?);
// extern ? dSetMaterial(?);
// extern ? func_8018A95C(?);
// extern ? func_8018AA38(?);
// extern ? func_8018AAE4(?);
extern void func_8018ABC0(f32, f32, f32);
// extern ? func_8018ACF0(?);
extern struct GdPlaneF* func_8018AD9C(void);
extern void func_8018AE70(Mat4*);
// extern ? dSetMatrix(?);
// extern ? dSetRMatrix(?);
extern Mat4* dGetRMatrixPtr(void);
extern void dSetIMatrix(Mat4*);
extern Mat4* dGetMatrixPtr(void);
extern Mat4* dGetIMatrixPtr(void);
extern float func_8018B57C();
// extern ? dSetSkinWeight(?);
extern void get_objvalue();
// extern ? Unknown8018B7A8(?);
// extern ? Proc8018B83C(?);
// extern ? Unknown8018B898(?);
// extern ? Unknown8018B900(?);
// extern ? make_label(?);
// extern ? make_gadget(?);
// extern ? set_objvalue(?);
// extern ? Unknown8018BD54(?);
// extern ? D_8018BCB8(?);
// extern ? adjust_gadget(?);
extern void Unknown8018BFB4(struct ObjGadget*);
extern void func_8018C170(struct ObjGroup*);

#endif /* _MARIO_HEAD_4_H_ */
